<?xml version="1.0"?>
<launch>

  <!-- GDB functionality -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <arg name="robot_ip" doc="IP of the controller" />
  <arg name="reverse_ip" default="" doc="IP of the computer running the driver" />
  <arg name="reverse_port" default="50001"/>
  <arg name="limited" default="false"/>
  <arg name="min_payload"  default="0.0"/>
  <arg name="max_payload"  default="3.0"/>
  <arg name="prefix" default="" />
  <arg name="max_velocity" default="10.0"/> <!-- [rad/s] -->
  <arg name="base_frame" default="$(arg prefix)base" />
  <arg name="tool_frame" default="$(arg prefix)tool0_controller" />
  <arg name="shutdown_on_disconnect" default="true" />
  <arg name="controllers" default="joint_state_controller joint_trajectory_controller"/>
  <arg name="stopped_controllers" default="joint_group_velocity_controller"/>


  <arg name="comport" default="/dev/ttyUSB0"/>
  <arg name="baud" default="115200"/>
  <arg name="run_test" default="true"/>

  <!-- robot model -->
  <include file="$(find ur_description)/launch/ur10_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include>


  <!-- Load hardware interface -->
  <node name="ur_hardware_interface" pkg="ur_modern_driver" type="ur_driver" output="log" launch-prefix="$(arg launch_prefix)">
    <param name="robot_ip_address" type="str" value="$(arg robot_ip)"/>
    <param name="reverse_ip_address" type="str" value="$(arg reverse_ip)" />
    <param name="reverse_port" type="int" value="$(arg reverse_port)" />
    <param name="min_payload" type="double" value="$(arg min_payload)"/>
    <param name="max_payload" type="double" value="$(arg max_payload)"/>
    <param name="max_velocity" type="double" value="$(arg max_velocity)"/>
    <param name="use_ros_control" type="bool" value="True"/>
    <param name="servoj_gain" type="double" value="750" />
    <param name="prefix" value="$(arg prefix)" />
    <param name="base_frame" type="str" value="$(arg base_frame)"/>
    <param name="tool_frame" type="str" value="$(arg tool_frame)"/>
    <param name="shutdown_on_disconnect" type="bool" value="$(arg shutdown_on_disconnect)"/>
    <remap from="/joint_states" to="/arm/joint_states"/>
  </node>

  <!-- Load controller settings -->
  <rosparam file="$(find ur_modern_driver)/config/ur10_cob_controllers.yaml" command="load"/>

  <!-- spawn controller manager -->
  <node name="ros_control_controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="$(arg controllers)" />

  <!-- load other controller -->
  <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load $(arg stopped_controllers)" />

  <!-- Robotiq 85 ROS Driver -->
  <node pkg="robotiq_85_driver" type="robotiq_85_driver" name="robotiq_85_driver" respawn="true" output="screen">
    <param name="num_grippers" value="1"/>
    <param name="comport" value="$(arg comport)" />
    <param name="baud" value="$(arg baud)" />
  </node>

  <!-- Robotiq 85 Gripper action server -->
  <node pkg="robotiq_85_driver" type="robotiq_85_action_server" name="robotiq_85_action_server" respawn="true" output="screen">
  </node>

  <!-- Convert joint states to /tf tranforms -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen"/>

  <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" output="screen">
          <remap from="robot_description" to="/robot_description"/>
          <remap from="joint_states" to="/joint_states"/>
          <rosparam command="load" file="$(find ur_modern_driver)/config/joint_state_publisher.yaml"/>
  </node>

</launch>
